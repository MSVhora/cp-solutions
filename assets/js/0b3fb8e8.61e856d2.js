"use strict";(self.webpackChunkcp_solutions=self.webpackChunkcp_solutions||[]).push([[3869],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>m});var n=r(7294);function s(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){s(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function a(t,e){if(null==t)return{};var r,n,s=function(t,e){if(null==t)return{};var r,n,s={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(s[r]=t[r]);return s}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(s[r]=t[r])}return s}var c=n.createContext({}),l=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},u=function(t){var e=l(t.components);return n.createElement(c.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var r=t.components,s=t.mdxType,i=t.originalType,c=t.parentName,u=a(t,["components","mdxType","originalType","parentName"]),p=l(r),g=s,m=p["".concat(c,".").concat(g)]||p[g]||d[g]||i;return r?n.createElement(m,o(o({ref:e},u),{},{components:r})):n.createElement(m,o({ref:e},u))}));function m(t,e){var r=arguments,s=e&&e.mdxType;if("string"==typeof t||s){var i=r.length,o=new Array(i);o[0]=g;var a={};for(var c in e)hasOwnProperty.call(e,c)&&(a[c]=e[c]);a.originalType=t,a[p]="string"==typeof t?t:s,o[1]=a;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},8455:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>b,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var n=r(7462),s=(r(7294),r(3905));const i={id:"string",title:"String",description:"",tags:["string"]},o=void 0,a={unversionedId:"data-structures/string",id:"data-structures/string",title:"String",description:"",source:"@site/docs/data-structures/02-string.mdx",sourceDirName:"data-structures",slug:"/data-structures/string",permalink:"/cp-solutions/docs/data-structures/string",draft:!1,editUrl:"https://github.com/MSVhora/cp-solutions/blob/master/docs/data-structures/02-string.mdx",tags:[{label:"string",permalink:"/cp-solutions/docs/tags/string"}],version:"current",sidebarPosition:2,frontMatter:{id:"string",title:"String",description:"",tags:["string"]},sidebar:"mainSidebar",previous:{title:"Array",permalink:"/cp-solutions/docs/data-structures/array"},next:{title:"Linked List",permalink:"/cp-solutions/docs/data-structures/linked-list"}},c={},l=[{value:"What is a String?",id:"what-is-a-string",level:2},{value:"Some common methods of String",id:"some-common-methods-of-string",level:2}],u=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",e)},p=u("Tabs"),d=u("TabItem"),g=u("SolutionAuthor"),m={toc:l},f="wrapper";function b(t){let{components:e,...r}=t;return(0,s.kt)(f,(0,n.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"what-is-a-string"},"What is a String?"),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"String")," class represents character strings. All string literals in Kotlin programs, such as ",(0,s.kt)("inlineCode",{parentName:"p"},'"abc"'),", are implemented as instances of this class."),(0,s.kt)("h2",{id:"some-common-methods-of-string"},"Some common methods of String"),(0,s.kt)(p,{mdxType:"Tabs"},(0,s.kt)(d,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,s.kt)(g,{name:"@msvhora",mdxType:"SolutionAuthor"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kt"},'// Declare & initialize a String\nvar str = ""\n\n// Length of String\nstr.length\n\n// Get character at specific index\nstr.get(0) or str[0]\n\n// Concat a string\nstr = str + "hello"\n\n// Retrive part of string (substring)\nval sunStr: String = str.substring(1..3) // substring(range: IntRange)\n\n// Split the string based on delimeter\nvar strList: List<String> = str.split(",")\n\n// Split the string based on size\nvar strList: List<String> = str.chunked(2)\n\n// Uppercase String\nstr.uppercase()\n\n// Lowercase String\nstr.lowercase()\n\n// Check substring\nstr.contains("hello")\n\n')))))}b.isMDXComponent=!0}}]);