"use strict";(self.webpackChunkcp_solutions=self.webpackChunkcp_solutions||[]).push([[900],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function p(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var i=r.createContext({}),s=function(t){var e=r.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):p(p({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(i.Provider,{value:e},t.children)},u="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,i=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),u=s(n),d=a,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,p(p({ref:e},c),{},{components:n})):r.createElement(f,p({ref:e},c))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,p=new Array(o);p[0]=d;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l[u]="string"==typeof t?t:a,p[1]=l;for(var s=2;s<o;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={id:"pattern-1",title:"Pattern 1",description:"Print given * pattern.",tags:["patterns","loops"]},p="Pattern 1",l={unversionedId:"patterns/pattern-1",id:"patterns/pattern-1",title:"Pattern 1",description:"Print given * pattern.",source:"@site/docs/patterns/01-pattern.mdx",sourceDirName:"patterns",slug:"/patterns/pattern-1",permalink:"/cp-solutions/docs/patterns/pattern-1",draft:!1,editUrl:"https://github.com/MSVhora/cp-solutions/docs/patterns/01-pattern.mdx",tags:[{label:"patterns",permalink:"/cp-solutions/docs/tags/patterns"},{label:"loops",permalink:"/cp-solutions/docs/tags/loops"}],version:"current",sidebarPosition:1,frontMatter:{id:"pattern-1",title:"Pattern 1",description:"Print given * pattern.",tags:["patterns","loops"]},sidebar:"tutorialSidebar",previous:{title:"Patterns",permalink:"/cp-solutions/docs/category/patterns"},next:{title:"Pattern 2",permalink:"/cp-solutions/docs/patterns/pattern-2"}},i={},s=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach",id:"approach",level:2},{value:"Output",id:"output",level:2}],c=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)},u=c("Tabs"),m=c("TabItem"),d=c("SolutionAuthor"),f={toc:s},b="wrapper";function h(t){let{components:e,...n}=t;return(0,a.kt)(b,(0,r.Z)({},f,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pattern-1"},"Pattern 1"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/kunal-kushwaha/DSA-Bootcamp-Java/blob/main/assignments/09-patterns.md"},"https://github.com/kunal-kushwaha/DSA-Bootcamp-Java/blob/main/assignments/09-patterns.md")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"Print the given patterns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\n*****\n*****\n*****\n*****\n*****\n\n")),(0,a.kt)("h2",{id:"approach"},"Approach"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Find how many rows are there and how they are printed, that will define the outer loop"),(0,a.kt)("li",{parentName:"ul"},"Find how columns are printed, that will define the inner loop"),(0,a.kt)("li",{parentName:"ul"},"Check for spaces, print them if needed"),(0,a.kt)("li",{parentName:"ul"},"Print the given character")),(0,a.kt)(u,{mdxType:"Tabs"},(0,a.kt)(m,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)(d,{name:"@msvhora",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kt"},'fun pattern1(n: Int) {\n    for(row in 1..n) {\n        val noOfCols = n\n        print("*".repeat(noOfCols))\n        println()\n    }\n}\n\nfun main() {    \n    pattern1(5)\n}\n')))),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kt"},"*****\n*****\n*****\n*****\n*****\n")))}h.isMDXComponent=!0}}]);